=pod

=head1 NAME

B<psych> - Brainfuck interpreter

=head1 SYNOPSIS

B<psych> [B<-bdn>] [B<-a> I<number>] [B<-p> I<number>] [B<-e> I<code> | I<file>]

B<psych> [B<-hV>]

=head1 DESCRIPTION

B<Psych> is an interpreter for Urban ME<0xFC>ller's Brainfuck programming
language (see L</"BRAINFUCK"> below).  In addition to the standard features of
the language, B<Psych> provides a small amount of customization through its
command-line options, and it also allows the programmer to include single-line
comments in the code with C<#>.

By default, B<Psych> reads Brainfuck source code from the specified file or, if
no file is given on the command line, from standard input (though execution
will not begin until EOF is reached).  If the B<-e> switch is used (see below),
the given file (if any) will be ignored.

Regarding the "implementation-defined" aspects of the language, moving the
pointer beyond the bounds of the array in either direction will cause it to
"wrap around" to the other end, and reading an EOF from standard input with
C<,> will leave the current cell unchanged.  Incrementing or decrementing a
cell beyond its limits, however, is still defined by the underlying C
implementation.

=head1 OPTIONS

=over

=item B<-a> I<number>

Set the size of the data array to I<number> elements (default 30,000)

=item B<-b>

If input is from a terminal, disable canonical input for the C<,> command,
thereby causing characters to be read as soon as they are typed.  Note that
B<Psych> may be configured at compile-time not to have this feature, in which
case a warning message will be printed to standard error instead.

=item B<-d>

Make C<.> output values as decimal numbers rather than as characters

=item B<-e> I<code>

Execute the given Brainfuck code.  Note that, if multiple B<-e> switches are
given, each piece of code is taken to be a single line of the same program.
Specifying one or more B<-e> options will also cause any source files named on
the command line to be ignored.

=item B<-h>

Display a summary of the Brainfuck commands and exit

=item B<-n>

Suppress the newline that is usually output on program termination

=item B<-p> I<number>

Print the numeric values of the first I<number> elements of the data array on
program termination

=item B<-V>

Display version & configuration information and exit

=back

=head1 BRAINFUCK

Brainfuck is a minimal Turing-complete programming language invented by Urban
ME<0xFC>ller that consists of only eight commands.  These commands operate on
an array of bytes by moving a pointer along the array & incrementing or
decrementing the byte under the pointer as the programmer sees fit.  At the
start of program execution, all of the bytes in the array are initialized to
zero, and the pointer is positioned at the first byte in the array.

=head2 Commands

=over

=item C<< > >>

increment the pointer

=item C<< < >>

decrement the pointer

=item C<+>

increment the value at the pointer

=item C<->

decrement the value at the pointer

=item C<.>

output the character represented by the value at the pointer

=item C<,>

read in a character from standard input & store it in the cell at the pointer

=item C<[>

execute the code up to the matching C<]> if the value at the pointer is
nonzero; otherwise, the code is skipped.

=item C<]>

go back to the matching C<[> if the value at the pointer is nonzero

=back

All other characters are ignored.

This implementation also supports single-line comments beginning with C<#>,
which can be used to ignore command characters as well.

=head1 NOTES

The default array length and size of the array cells (30,000 and 1 byte,
respectively) may be reconfigured at compile time.  Run C<psych -V> to see the
values for your version.

=head1 SEE ALSO

L<http://github.com/jwodder/psych>

L<http://www.muppetlabs.com/~breadbox/bf/>

L<http://en.wikipedia.org/wiki/Brainfuck>

L<http://esoteric.sange.fi/brainfuck/>

=head1 AUTHOR

John T. Wodder II <jwodder@sdf.lonestar.org>

=head1 COPYRIGHT

Copyright 2007, 2008, 2014 by John T. Wodder II

B<Psych> is distributed under the GNU General Public License, v.3.0 or later.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.

=cut
